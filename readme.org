
https://github.com/cmchaol/stage4-amd64-hardened-squashfs


* goals

|    | stage4       | docker     | squashfs |
|----+--------------+------------+----------|
| 30 | shell script |            |          |
|    |              |            |          |
| 40 |              | Dockerfile |          |
|    |              |            |          |
|    |              |            |          |


* steps

|       |        |            |            |
| steps | github | docker hub |            |
|       |        |            |            |
|-------+--------+------------+------------|
|    20 | clone  |            |            |
|       |        |            |            |
|    90 |        |            | references |
|       |        |            |            |



** 40 test

Dockerfile

dt="/tmp/dockertest"

mkdir $dt

cd $dt

#  distfiles.gentoo.org

cat > Dockerfile << EOF
FROM alpine:3.5 as builder

WORKDIR /tmp/gentoo

RUN apk add --no-cache \
 gnupg \
 tar \
 && U1="http://distfiles.gentoo.org/releases/amd64/autobuilds/latest-stage4-amd64-hardened+minimal.txt" \
 && U2=\$(wget -q -O- $U1 | awk '/stage4/ {print \$1}') \
 && U3="http://distfiles.gentoo.org/releases/amd64/autobuilds/" \
 && wget -q -c \$U3\$U2 \$U3\$U2.CONTENTS \$U3\$U2.DIGESTS.asc \
 && SIGNING_KEY="0xBB572E0E2D182910" \
 && gpg --keyserver hkps.pool.sks-keyservers.net --recv-keys \${SIGNING_KEY} \
 || gpg --keyserver keys.gnupg.net --recv-keys \${SIGNING_KEY} \                       
 || gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \${SIGNING_KEY} \
 && gpg --verify *.DIGESTS.asc \
 && awk '/# SHA512 HASH/{getline; print}' *.DIGESTS.asc | sha512sum -c \
 && tar xjpf stage4*.bz2 --xattrs --numeric-owner \
 && sed -i -e 's/#rc_sys=""/rc_sys="docker"/g' etc/rc.conf \
 && echo 'UTC' > etc/timezone \
 && rm stage4*


FROM scratch

WORKDIR /
COPY --from=builder /tmp/gentoo/ /
CMD ["/bin/bash"]
EOF


# gentoo.osuosl.org



cat > Dockerfile << EOF
FROM alpine:3.5 as builder

WORKDIR /tmp/gentoo

RUN apk add --no-cache gnupg tar \
 && U1="http://gentoo.osuosl.org/releases/amd64/autobuilds/latest-stage4-amd64-hardened+minimal.txt" \
 && U2=\$(wget -q -O- $U1 | awk '/stage4/ {print \$1}') \
 && U3="http://gentoo.osuosl.org/releases/amd64/autobuilds/" \
 && wget -q -c \$U3\$U2 \$U3\$U2.CONTENTS \$U3\$U2.DIGESTS.asc \
 && SIGNING_KEY="0xBB572E0E2D182910" \
 && gpg --keyserver hkps.pool.sks-keyservers.net --recv-keys \${SIGNING_KEY} \
 || gpg --keyserver keys.gnupg.net --recv-keys \${SIGNING_KEY} \                       
 || gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \${SIGNING_KEY} \
 && gpg --verify *.DIGESTS.asc \
 && awk '/# SHA512 HASH/{getline; print}' *.DIGESTS.asc | sha512sum -c \
 && tar xjpf stage4*.bz2 --xattrs --numeric-owner \
 && sed -i -e 's/#rc_sys=""/rc_sys="docker"/g' etc/rc.conf \
 && echo 'UTC' > etc/timezone \
 && rm stage4*


FROM scratch

WORKDIR /
COPY --from=builder /tmp/gentoo/ /
CMD ["/bin/bash"]
EOF



docker build -t c5766/mystage4 .

docker run -it c5766/mystage4


http://gentoo.osuosl.org/releases/amd64/autobuilds/latest-stage4-amd64-hardened+minimal.txt




** 40 

Dockerfile

dt="/tmp/dockertest"

mkdir $dt

cd $dt

#  distfiles.gentoo.org

cat > Dockerfile << EOF
FROM alpine:3.5 as builder

WORKDIR /tmp/gentoo

RUN apk add --no-cache gnupg tar \
 && U1="http://distfiles.gentoo.org/releases/amd64/autobuilds/latest-stage4-amd64-hardened+minimal.txt" \
 && U2=\$(wget -q -O- $U1 | awk '/stage4/ {print \$1}') \
 && U3="http://distfiles.gentoo.org/releases/amd64/autobuilds/" \
 && wget -q -c \$U3\$U2 \$U3\$U2.CONTENTS \$U3\$U2.DIGESTS.asc \
 && SIGNING_KEY="0xBB572E0E2D182910" \
 && gpg --keyserver hkps.pool.sks-keyservers.net --recv-keys \${SIGNING_KEY} \
 || gpg --keyserver keys.gnupg.net --recv-keys \${SIGNING_KEY} \                       
 || gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \${SIGNING_KEY} \
 && gpg --verify *.DIGESTS.asc \
 && awk '/# SHA512 HASH/{getline; print}' *.DIGESTS.asc | sha512sum -c \
 && tar xjpf stage4*.bz2 --xattrs --numeric-owner \
 && sed -i -e 's/#rc_sys=""/rc_sys="docker"/g' etc/rc.conf \
 && echo 'UTC' > etc/timezone \
 && rm stage4*


FROM scratch

WORKDIR /
COPY --from=builder /tmp/gentoo/ /
CMD ["/bin/bash"]
EOF


# gentoo.osuosl.org



cat > Dockerfile << EOF
FROM alpine:3.5 as builder

WORKDIR /tmp/gentoo

RUN apk add --no-cache gnupg tar \
 && U1="http://gentoo.osuosl.org/releases/amd64/autobuilds/latest-stage4-amd64-hardened+minimal.txt" \
 && U2=\$(wget -q -O- $U1 | awk '/stage4/ {print \$1}') \
 && U3="http://gentoo.osuosl.org/releases/amd64/autobuilds/" \
 && wget -q -c \$U3\$U2 \$U3\$U2.CONTENTS \$U3\$U2.DIGESTS.asc \
 && SIGNING_KEY="0xBB572E0E2D182910" \
 && gpg --keyserver hkps.pool.sks-keyservers.net --recv-keys \${SIGNING_KEY} \
 || gpg --keyserver keys.gnupg.net --recv-keys \${SIGNING_KEY} \                       
 || gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \${SIGNING_KEY} \
 && gpg --verify *.DIGESTS.asc \
 && awk '/# SHA512 HASH/{getline; print}' *.DIGESTS.asc | sha512sum -c \
 && tar xjpf stage4*.bz2 --xattrs --numeric-owner \
 && sed -i -e 's/#rc_sys=""/rc_sys="docker"/g' etc/rc.conf \
 && echo 'UTC' > etc/timezone \
 && rm stage4*


FROM scratch

WORKDIR /
COPY --from=builder /tmp/gentoo/ /
CMD ["/bin/bash"]
EOF



docker build -t c5766/mystage4 .

docker run -it c5766/mystage4


http://gentoo.osuosl.org/releases/amd64/autobuilds/latest-stage4-amd64-hardened+minimal.txt




** 20

#+HEADERS: :dir /tmp
#+BEGIN_SRC sh

git clone git@github.com:cmchaol/stage4-amd64-hardened-squashfs.git
cd stage4-amd64-hardened-squashfs
git config user.email "cmchaol@users.noreply.github.com"
git config user.name "cmchaol"

#+END_SRC


** 30

| locate the url    |
|                   |
| download the file |
|                   |
| verify .asc       |
|                   |
| verify            |

|        | aims                         |
|--------+------------------------------|
| U1     | find the date of the stage4  |
|        |                              |
| U2     | find the 2nd half of the url |
|        |                              |
| U3     | the 1st half of the url      |
|        |                              |
| $U3$U2 | the url of the stage4        |
|        |                              |



*** Dockerfile

dt="/tmp/dockertest"

mkdir $dt

cd $dt


cat > Dockerfile << EOF
FROM ${BOOTSTRAP:-alpine:3.5} as builder

WORKDIR /tmp/gentoo

RUN apk add --no-cache gnupg tar \
 && U1="http://distfiles.gentoo.org/releases/amd64/autobuilds/latest-stage4-amd64-hardened+minimal.txt" \
 && U2=$(wget -q -O- $U1 | awk '/stage4/ {print $1}') \
 && U3="http://distfiles.gentoo.org/releases/amd64/autobuilds/" \
 && wget -q -c $U3$U2 $U3$U2.CONTENTS $U3$U2.DIGESTS.asc \
 && SIGNING_KEY="0xBB572E0E2D182910" \
 && gpg --keyserver hkps.pool.sks-keyservers.net --recv-keys ${SIGNING_KEY} \
 || gpg --keyserver keys.gnupg.net --recv-keys ${SIGNING_KEY} \                       
 || gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys ${SIGNING_KEY} \
 && gpg --verify *.DIGESTS.asc \
 && awk '/# SHA512 HASH/{getline; print}' *.DIGESTS.asc | sha512sum -c \
 && tar xjpf stage4*.bz2 --xattrs --numeric-owner \
 && sed -i -e 's/#rc_sys=""/rc_sys="docker"/g' etc/rc.conf \
 && echo 'UTC' > etc/timezone \
 && rm stage4*


FROM scratch

WORKDIR /
COPY --from=builder /tmp/gentoo/ /
CMD ["/bin/bash"]
EOF


docker build -t c5766/mystage4 .

docker run -it c5766/mystage4

*** shell script conclusion

wd="/tmp/gentoo"   # workdir

mkdir $wd

cd $wd


U1="http://distfiles.gentoo.org/releases/amd64/autobuilds/latest-stage4-amd64-hardened+minimal.txt"

U2=$(wget -q -O- $U1 | awk '/stage4/ {print $1}')

U3="http://distfiles.gentoo.org/releases/amd64/autobuilds/"


wget -q -c $U3$U2 $U3$U2.CONTENTS $U3$U2.DIGESTS.asc


SIGNING_KEY="0xBB572E0E2D182910"

gpg --keyserver hkps.pool.sks-keyservers.net --recv-keys ${SIGNING_KEY} \
 || gpg --keyserver keys.gnupg.net --recv-keys ${SIGNING_KEY} \                       
 || gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys ${SIGNING_KEY} \
gpg --verify *.DIGESTS.asc

awk '/# SHA512 HASH/{getline; print}' *.DIGESTS.asc | sha512sum -c 





*** draft


ul="http://distfiles.gentoo.org/releases/amd64/autobuilds/latest-stage4-amd64-hardened+minimal.txt"

curl $ul

wget -q -O- $ul

wget -q -O- $ul | tail -n 1

wget -q -O- $ul | awk 'END {print $1}'  # the 2nd half path of the url $ul2

wget -q -O- $ul | awk 'END {print $2}'  # END

wget -q -O- $ul | awk '/stage4/ {print $1}'   # //

ul2=$(wget -q -O- $ul | awk 'END {print $1}')

ul2=$(wget -q -O- $ul | awk '/stage4/ {print $1}')

echo $ul2    # 20170504/hardened/stage4-amd64-hardened+minimal-20170504.tar.bz2

ul3="http://distfiles.gentoo.org/releases/amd64/autobuilds/"

echo $ul3$ul2  # http://distfiles.gentoo.org/releases/amd64/autobuilds/20170504/hardened/stage4-amd64-hardened+minimal-20170504.tar.bz2

wget -q $ul3$ul2 

wget -q $ul3$ul2.CONTENTS

wget -q $ul3$ul2.DIGESTS.asc

wget -q -c $ul3$ul2 $ul3$ul2.CONTENTS $ul3$ul2.DIGESTS.asc




wget -q -O- $ul3$ul2.DIGESTS.asc	

wget -q     $ul3$ul2.DIGESTS.asc	

wget -q -O- $ul3$ul2.DIGESTS.asc | grep 512 -A 1

SIGNING_KEY="0xBB572E0E2D182910"

gpg --keyserver hkps.pool.sks-keyservers.net --recv-keys ${SIGNING_KEY} \
 || gpg --keyserver keys.gnupg.net --recv-keys ${SIGNING_KEY} \                       
 || gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys ${SIGNING_KEY} \
gpg --verify *.DIGESTS.asc


awk '/# SHA512 HASH/{getline; print}' *.DIGESTS.asc | sha512sum -c 

** 90

http://distfiles.gentoo.org/releases/amd64/autobuilds/


http://distfiles.gentoo.org/releases/amd64/autobuilds/current-stage4-amd64-hardened+minimal/


https://github.com/gentoo/gentoo-docker-images


https://github.com/gentoo/gentoo-docker-images/blob/master/stage3.Dockerfile

# This Dockerfile creates a gentoo stage3 container image. By default it 
# creates a stage3-amd64 image. It utilizes a multi-stage build and requires 
# docker-17.05.0 or later. It fetches a daily snapshot from the official 
# sources and verifies its checksum as well as its gpg signature.

# As gpg keyservers sometimes are unreliable, we use multiple gpg server pools
# to fetch the signing key.


FROM ${BOOTSTRAP:-alpine:3.5} as builder

WORKDIR /gentoo

ARG ARCH=amd64
ARG MICROARCH=amd64
ARG SUFFIX
ARG DIST="http://distfiles.gentoo.org/releases/${ARCH}/autobuilds/"
ARG SIGNING_KEY="0xBB572E0E2D182910"

RUN echo "Building Gentoo Container image for ${ARCH} ${SUFFIX} fetching from ${DIST}" \
 && apk --no-cache add gnupg tar wget \
 && STAGE3PATH="$(wget -q -O- "${DIST}/latest-stage3-${MICROARCH}${SUFFIX}.txt" | tail -n 1 | cut -f 1 -d ' ')" \
 && STAGE3="$(basename ${STAGE3PATH})" \
 && wget -q -c "${DIST}/${STAGE3PATH}" "${DIST}/${STAGE3PATH}.CONTENTS" "${DIST}/${STAGE3PATH}.DIGESTS.asc" \
 && gpg --keyserver hkps.pool.sks-keyservers.net --recv-keys ${SIGNING_KEY} \
 || gpg --keyserver keys.gnupg.net --recv-keys ${SIGNING_KEY} \
 || gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys ${SIGNING_KEY} \
 && gpg --verify "${STAGE3}.DIGESTS.asc" \
 && awk '/# SHA512 HASH/{getline; print}' ${STAGE3}.DIGESTS.asc | sha512sum -c \
 && tar xjpf "${STAGE3}" --xattrs --numeric-owner \
 && sed -i -e 's/#rc_sys=""/rc_sys="docker"/g' etc/rc.conf \
 && echo 'UTC' > etc/timezone \
 && rm ${STAGE3}.DIGESTS.asc ${STAGE3}.CONTENTS ${STAGE3}

FROM scratch

WORKDIR /
COPY --from=builder /gentoo/ /
CMD ["/bin/bash"]
